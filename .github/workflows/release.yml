name: Build and Release

on:
  push:
    tags:
      - "v*"

env:
  NODE_VERSION: "20"
  PNPM_VERSION: "9"

jobs:
  build-linux:
    name: Build Linux AppImage
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build AppImage
        run: pnpm dist:appimage

      - name: Collect artifacts
        run: |
          mkdir -p dist-artifacts
          shopt -s nullglob
          for file in release/*.AppImage release/*.yml; do
            if [ -f "$file" ]; then
              cp "$file" dist-artifacts/
            fi
          done
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-linux
          path: dist-artifacts

  build-windows:
    name: Build Windows Installer
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Windows installer
        run: pnpm dist:win
        shell: pwsh

      - name: Collect artifacts
        run: |
          New-Item -ItemType Directory -Path dist-artifacts -Force | Out-Null
          Get-ChildItem -Path release -Include *.exe,*.yml -File -Recurse | ForEach-Object {
            Copy-Item $_.FullName dist-artifacts/
          }
        shell: pwsh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-windows
          path: dist-artifacts

  release:
    name: Publish Release
    needs:
      - build-linux
      - build-windows
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-assets
          merge-multiple: true

      - name: List assets
        run: ls -R release-assets

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          prerelease: ${{ contains(github.ref_name, '-') }}
          files: |
            release-assets/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
